function extractTestMetric(jsonObj) {
	const testResults = jsonObj["testResults"];
	const willNotSupportTestCount = getTestWillNotSupportTestCount(testResults);

	// in theory, if we could get correct stats of failedTests and failedTestSuites
	// the stats generated by jest should be valid, so we don't need to check any more

	return {
		"Total testSuites": jsonObj.numTotalTestSuites,
		"Total tests": jsonObj.numTotalTests,
		"Total passedTestSuites": jsonObj.numPassedTestSuites,
		"Total passedTests": jsonObj.numPassedTests,
		"Total willNotSupportTest": jsonObj.numPassedTests,
		"Tests Compatibility": `${(
			((jsonObj.numPassedTests + willNotSupportTestCount) /
				jsonObj.numTotalTests) *
			100
		).toFixed(3)}%`,
	};
}

function getTestWillNotSupportTestCount(testResults) {
	const willNotSupportTestCount = testResults.reduce((acc, testSuite) => {
		return acc + getTestSuiteWillNotSupportTestCount(testSuite);
	}, 0);
	return willNotSupportTestCount;
}

function getTestSuiteWillNotSupportTestCount(suite) {
	return suite.assertionResults.filter((item) => {
		// pending means this test is skipped
		const isPending = item.status === "pending";
		if (!isPending) {
			return false;
		}
		const titles = item.ancestorTitles;
		const lastPartOfTitle = titles[titles.length - 1];
		return lastPartOfTitle.startsWith("WillNotSupport");
	}).length;
}

module.exports = {
	extractTestMetric,
};
