---
source: crates/rspack_testing/src/run_fixture.rs
---
```js title=main.js
(self['webpackChunkwebpack'] = self['webpackChunkwebpack'] || []).push([["main"], {
"./index.js": function (module, __webpack_exports__, __webpack_require__) {
__webpack_require__.a(module, async function (__webpack_handle_async_dependencies__, __webpack_async_result__) { try {
'use strict';
__webpack_require__.r(__webpack_exports__);
/* harmony import */var _v128_wasm__WEBPACK_IMPORTED_MODULE_0_ = __webpack_require__(/* ./v128.wasm */"./v128.wasm");
var __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_v128_wasm__WEBPACK_IMPORTED_MODULE_0_]);
([_v128_wasm__WEBPACK_IMPORTED_MODULE_0_] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);
console.log(_v128_wasm__WEBPACK_IMPORTED_MODULE_0_["default"].x);

__webpack_async_result__();
} catch(e) { __webpack_async_result__(e); } });},
"./v128.wasm": function (module, exports, __webpack_require__) {
 module.exports = __webpack_require__.v(exports, module.id, "d91c0417fc1807d2.module.wasm" );},

},function(__webpack_require__) {
var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId) }
var __webpack_exports__ = (__webpack_exec__("./index.js"));

}
]);
```
```js title=runtime.js
(function() {
var __webpack_modules__ = {

}
// The module cache
 var __webpack_module_cache__ = {};
function __webpack_require__(moduleId) {
// Check if module is in cache
        var cachedModule = __webpack_module_cache__[moduleId];
        if (cachedModule !== undefined) {
      return cachedModule.exports;
      }
      // Create a new module (and put it into the cache)
      var module = (__webpack_module_cache__[moduleId] = {
      id: moduleId,
 exports: {}
      });
      // Execute the module function
      __webpack_modules__[moduleId](module, module.exports, __webpack_require__);
// Return the exports of the module
 return module.exports;

}
// expose the modules object (__webpack_modules__)
 __webpack_require__.m = __webpack_modules__;
// webpack/runtime/has_own_property
(function() {
__webpack_require__.o = function (obj, prop) {
	return Object.prototype.hasOwnProperty.call(obj, prop);
};

})();
// webpack/runtime/on_chunk_loaded
(function() {
var deferred = [];
__webpack_require__.O = function (result, chunkIds, fn, priority) {
	if (chunkIds) {
		priority = priority || 0;
		for (var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--)
			deferred[i] = deferred[i - 1];
		deferred[i] = [chunkIds, fn, priority];
		return;
	}
	var notFulfilled = Infinity;
	for (var i = 0; i < deferred.length; i++) {
		var chunkIds = deferred[i][0],
			fn = deferred[i][1],
			priority = deferred[i][2];
		var fulfilled = true;
		for (var j = 0; j < chunkIds.length; j++) {
			if (
				(priority & (1 === 0) || notFulfilled >= priority) &&
				Object.keys(__webpack_require__.O).every(function (key) {
					return __webpack_require__.O[key](chunkIds[j]);
				})
			) {
				chunkIds.splice(j--, 1);
			} else {
				fulfilled = false;
				if (priority < notFulfilled) notFulfilled = priority;
			}
		}
		if (fulfilled) {
			deferred.splice(i--, 1);
			var r = fn();
			if (r !== undefined) result = r;
		}
	}
	return result;
};

})();
// webpack/runtime/async_module
(function() {
var webpackQueues =
	typeof Symbol === "function"
		? Symbol("webpack queues")
		: "__webpack_queues__";
var webpackExports =
	typeof Symbol === "function"
		? Symbol("webpack exports")
		: "__webpack_exports__";
var webpackError =
	typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
var resolveQueue = queue => {
	if (queue && !queue.d) {
		queue.d = 1;
		queue.forEach(fn => fn.r--);
		queue.forEach(fn => (fn.r-- ? fn.r++ : fn()));
	}
};
var wrapDeps = deps =>
	deps.map(dep => {
		if (dep !== null && typeof dep === "object") {
			if (dep[webpackQueues]) return dep;
			if (dep.then) {
				var queue = [];
				queue.d = 0;
				dep.then(
					r => {
						obj[webpackExports] = r;
						resolveQueue(queue);
					},
					e => {
						obj[webpackError] = e;
						resolveQueue(queue);
					}
				);
				var obj = {};
				obj[webpackQueues] = fn => fn(queue);
				return obj;
			}
		}
		var ret = {};
		ret[webpackQueues] = x => {};
		ret[webpackExports] = dep;
		return ret;
	});
__webpack_require__.a = (module, body, hasAwait) => {
	var queue;
	hasAwait && ((queue = []).d = 1);
	var depQueues = new Set();
	var exports = module.exports;
	var currentDeps;
	var outerResolve;
	var reject;
	var promise = new Promise((resolve, rej) => {
		reject = rej;
		outerResolve = resolve;
	});
	promise[webpackExports] = exports;
	promise[webpackQueues] = fn => (
		queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {})
	);
	module.exports = promise;
	body(
		deps => {
			currentDeps = wrapDeps(deps);
			var fn;
			var getResult = () =>
				currentDeps.map(d => {
					if (d[webpackError]) throw d[webpackError];
					return d[webpackExports];
				});
			var promise = new Promise(resolve => {
				fn = () => resolve(getResult);
				fn.r = 0;
				var fnQueue = q =>
					q !== queue &&
					!depQueues.has(q) &&
					(depQueues.add(q), q && !q.d && (fn.r++, q.push(fn)));
				currentDeps.map(dep => dep[webpackQueues](fnQueue));
			});
			return fn.r ? promise : getResult();
		},
		err => (
			err ? reject((promise[webpackError] = err)) : outerResolve(exports),
			resolveQueue(queue)
		)
	);
	queue && (queue.d = 0);
};

})();
// webpack/runtime/make_namespace_object
(function() {
// define __esModule on exports
__webpack_require__.r = function(exports) {
	if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
	}
	Object.defineProperty(exports, '__esModule', { value: true });
};

})();
// webpack/runtime/jsonp_chunk_loading
(function() {
var installedChunks = {"runtime": 0,};
__webpack_require__.O.j = function (chunkId) {
	return installedChunks[chunkId] === 0;
};
// install a JSONP callback for chunk loading
var webpackJsonpCallback = function (parentChunkLoadingFunction, data) {
	var chunkIds = data[0],
	moreModules = data[1],
	runtime = data[2];
	// add "moreModules" to the modules object,
	// then flag all "chunkIds" as loaded and fire callback
	var moduleId,
		chunkId,
		i = 0;
	if (chunkIds.some(function(id) { return installedChunks[id] !== 0 })) {
		for (moduleId in moreModules) {
			if (__webpack_require__.o(moreModules, moduleId)) {
				__webpack_require__.m[moduleId] = moreModules[moduleId];
			}
		}
		if (runtime) var result = runtime(__webpack_require__);
	}
	if (parentChunkLoadingFunction) parentChunkLoadingFunction(data);
	for (; i < chunkIds.length; i++) {
		chunkId = chunkIds[i];
		if (
			__webpack_require__.o(installedChunks, chunkId) &&
			installedChunks[chunkId]
		) {
			installedChunks[chunkId][0]();
		}
		installedChunks[chunkId] = 0;
	}
	return __webpack_require__.O(result);
};

var chunkLoadingGlobal = self['webpackChunkwebpack'] = self['webpackChunkwebpack'] || [];
chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
chunkLoadingGlobal.push = webpackJsonpCallback.bind(
	null,
	chunkLoadingGlobal.push.bind(chunkLoadingGlobal)
);

})();
// rspack/runtime/wasm loading
(function() {
__webpack_require__.v = (exports, wasmModuleId, wasmModuleHash, importsObj) => {
  var req = fetch(__webpack_require__.p + wasmModuleHash);
  if (typeof WebAssembly.instantiateStreaming === "function") {
  return WebAssembly.instantiateStreaming(req, importsObj).then(
    res => Object.assign(exports, res.instance.exports)
  );
}
  return req
    .then(x => x.arrayBuffer())
    .then(bytes => WebAssembly.instantiate(bytes, importsObj))
    .then(res => Object.assign(exports, res.instance.exports));
};

})();

})()

```
