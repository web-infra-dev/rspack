[package]
description       = "rspack builtin swc loader"
edition.workspace = true
license           = "MIT"
name              = "rspack_loader_swc"
repository        = "https://github.com/web-infra-dev/rspack"
version.workspace = true
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[package.metadata.cargo-shear]
ignored = ["swc"]
[features]
default = []
plugin = [
  "rspack_util/plugin",

  # plugin_transform_host_native cannot be enabled directly to avoid wasmer dependency
  "swc_core/__plugin_transform_host",
  "swc_core/__plugin_transform_host_schema_v1",
  "swc_core/plugin_transform_host_native_filesystem_cache",
]

[dependencies]
async-trait                    = { workspace = true }
either                         = { workspace = true }
rspack_cacheable               = { workspace = true }
rspack_core                    = { workspace = true }
rspack_error                   = { workspace = true }
rspack_hook                    = { workspace = true }
rspack_javascript_compiler     = { workspace = true }
rspack_loader_runner           = { workspace = true }
rspack_swc_plugin_import       = { workspace = true }
rspack_swc_plugin_ts_collector = { workspace = true }
rspack_util                    = { workspace = true, optional = true }
rspack_workspace               = { workspace = true }
rustc-hash                     = { workspace = true }
serde                          = { workspace = true, features = ["derive"] }
serde_json                     = { workspace = true }
swc                            = { workspace = true, features = ["manual-tokio-runtime"] }
swc_config                     = { workspace = true }
swc_core                       = { workspace = true, features = ["base", "ecma_ast", "common", "ecma_preset_env", "ecma_helpers_inline"] }
tokio                          = { workspace = true }
tracing                        = { workspace = true }


[target.'cfg(not(target_family = "wasm"))'.dependencies]
stacker = { workspace = true }
