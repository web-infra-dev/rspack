---
source: crates/rspack_testing/src/run_fixture.rs
---
```js title=main.js
(self['webpackChunkwebpack'] = self['webpackChunkwebpack'] || []).push([["main"], {
"./index.js": function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
'use strict';
__webpack_require__.r(__webpack_exports__);
/* harmony import */var _module__WEBPACK_IMPORTED_MODULE_0_ = __webpack_require__(/* ./module */"./module.js");

it("should be able to handle circular referenced", ()=>{
    expect((0, _module__WEBPACK_IMPORTED_MODULE_0_.x)()).toEqual([
        _module__WEBPACK_IMPORTED_MODULE_0_.y,
        _module__WEBPACK_IMPORTED_MODULE_0_.z
    ]);
    const [_a, b, c, d] = (0, _module__WEBPACK_IMPORTED_MODULE_0_.a)();
    expect(b()).toEqual([
        _module__WEBPACK_IMPORTED_MODULE_0_.a,
        b,
        c,
        d
    ]);
    expect(c()).toEqual([
        _module__WEBPACK_IMPORTED_MODULE_0_.a,
        b,
        c,
        d
    ]);
    expect(d()).toEqual([
        _module__WEBPACK_IMPORTED_MODULE_0_.a,
        b,
        c,
        d
    ]);
    const [f2, f4] = (0, _module__WEBPACK_IMPORTED_MODULE_0_.f3)();
    const [f1, _f3] = f2();
    expect(_f3).toBe(_module__WEBPACK_IMPORTED_MODULE_0_.f3);
    expect((0, _module__WEBPACK_IMPORTED_MODULE_0_.f3)()).toEqual(f1());
    expect(f2()).toEqual(f4());
});
},
"./module.js": function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
'use strict';
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  'x': function() { return x; },
  'y': function() { return y; },
  'z': function() { return z; },
  'a': function() { return a; },
  'f3': function() { return f3; }
});
function x() {
    return [
        y,
        z
    ];
}
function y() {
    return [
        x,
        z
    ];
}
function z() {
    return [
        x,
        y
    ];
}

function a() {
    return [
        a,
        b,
        c,
        d
    ];
}
function b() {
    return [
        a,
        b,
        c,
        d
    ];
}
function c() {
    return [
        a,
        b,
        c,
        d
    ];
}
function d() {
    return [
        a,
        b,
        c,
        d
    ];
}

function f1() {
    return [
        f2,
        f4
    ];
}
function f2() {
    return [
        f1,
        f3
    ];
}
function f3() {
    return [
        f2,
        f4
    ];
}
function f4() {
    return [
        f1,
        f3
    ];
}

},

},function(__webpack_require__) {
var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId) }
var __webpack_exports__ = (__webpack_exec__("./index.js"));

}
]);
```
```js title=runtime.js
(function() {
var __webpack_modules__ = {

}
// The module cache
 var __webpack_module_cache__ = {};
function __webpack_require__(moduleId) {
// Check if module is in cache
        var cachedModule = __webpack_module_cache__[moduleId];
        if (cachedModule !== undefined) {
      return cachedModule.exports;
      }
      // Create a new module (and put it into the cache)
      var module = (__webpack_module_cache__[moduleId] = {
       exports: {}
      });
      // Execute the module function
      __webpack_modules__[moduleId](module, module.exports, __webpack_require__);
// Return the exports of the module
 return module.exports;

}
// expose the modules object (__webpack_modules__)
 __webpack_require__.m = __webpack_modules__;
// webpack/runtime/has_own_property
(function() {
__webpack_require__.o = function (obj, prop) {
	return Object.prototype.hasOwnProperty.call(obj, prop);
};

})();
// webpack/runtime/on_chunk_loaded
(function() {
var deferred = [];
__webpack_require__.O = function (result, chunkIds, fn, priority) {
	if (chunkIds) {
		priority = priority || 0;
		for (var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--)
			deferred[i] = deferred[i - 1];
		deferred[i] = [chunkIds, fn, priority];
		return;
	}
	var notFulfilled = Infinity;
	for (var i = 0; i < deferred.length; i++) {
		var chunkIds = deferred[i][0],
			fn = deferred[i][1],
			priority = deferred[i][2];
		var fulfilled = true;
		for (var j = 0; j < chunkIds.length; j++) {
			if (
				(priority & (1 === 0) || notFulfilled >= priority) &&
				Object.keys(__webpack_require__.O).every(function (key) {
					return __webpack_require__.O[key](chunkIds[j]);
				})
			) {
				chunkIds.splice(j--, 1);
			} else {
				fulfilled = false;
				if (priority < notFulfilled) notFulfilled = priority;
			}
		}
		if (fulfilled) {
			deferred.splice(i--, 1);
			var r = fn();
			if (r !== undefined) result = r;
		}
	}
	return result;
};

})();
// webpack/runtime/define_property_getters
(function() {
__webpack_require__.d = function(exports, definition) {
	for(var key in definition) {
        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
        }
    }
};
})();
// webpack/runtime/make_namespace_object
(function() {
// define __esModule on exports
__webpack_require__.r = function(exports) {
	if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
		Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
	}
	Object.defineProperty(exports, '__esModule', { value: true });
};

})();
// webpack/runtime/jsonp_chunk_loading
(function() {
var installedChunks = {"runtime": 0,};
__webpack_require__.O.j = function (chunkId) {
	return installedChunks[chunkId] === 0;
};
// install a JSONP callback for chunk loading
var webpackJsonpCallback = function (parentChunkLoadingFunction, data) {
	var chunkIds = data[0],
	moreModules = data[1],
	runtime = data[2];
	// add "moreModules" to the modules object,
	// then flag all "chunkIds" as loaded and fire callback
	var moduleId,
		chunkId,
		i = 0;
	if (chunkIds.some(function(id) { return installedChunks[id] !== 0 })) {
		for (moduleId in moreModules) {
			if (__webpack_require__.o(moreModules, moduleId)) {
				__webpack_require__.m[moduleId] = moreModules[moduleId];
			}
		}
		if (runtime) var result = runtime(__webpack_require__);
	}
	if (parentChunkLoadingFunction) parentChunkLoadingFunction(data);
	for (; i < chunkIds.length; i++) {
		chunkId = chunkIds[i];
		if (
			__webpack_require__.o(installedChunks, chunkId) &&
			installedChunks[chunkId]
		) {
			installedChunks[chunkId][0]();
		}
		installedChunks[chunkId] = 0;
	}
	return __webpack_require__.O(result);
};

var chunkLoadingGlobal = self['webpackChunkwebpack'] = self['webpackChunkwebpack'] || [];
chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
chunkLoadingGlobal.push = webpackJsonpCallback.bind(
	null,
	chunkLoadingGlobal.push.bind(chunkLoadingGlobal)
);

})();

})()

```
