---
source: crates/rspack_testing/src/run_fixture.rs
---
```js title=chunk_js.js
(self['webpackChunkwebpack'] = self['webpackChunkwebpack'] || []).push([["chunk_js"], {
"./chunk.js": function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
'use strict';
__webpack_require__.r(__webpack_exports__);

},

}]);
```

```js title=main.js
(self['webpackChunkwebpack'] = self['webpackChunkwebpack'] || []).push([["main"], {
"./import-module.js": function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
'use strict';
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  'test': function() { return test; }
});

 function test() {
    doSomething({
        type: "inline"
    });
}
},
"./index.js": function (__unused_webpack_module, exports, __webpack_require__) {
it("should generate correct code when pure expressions are in dead branches", ()=>{
    __webpack_require__(/* ./import-module */"./import-module.js").test();
    return Promise.all([
        __webpack_require__.el(/* ./some-module */"./some-module.js").then(__webpack_require__.bind(__webpack_require__, /* ./some-module */"./some-module.js")),
        __webpack_require__.el(/* ./chunk */"./chunk.js").then(__webpack_require__.bind(__webpack_require__, /* ./chunk */"./chunk.js"))
    ]);
});
},

},function(__webpack_require__) {
var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId) }
var __webpack_exports__ = (__webpack_exec__("./index.js"));

}
]);
```

```js title=some-module_js.js
(self['webpackChunkwebpack'] = self['webpackChunkwebpack'] || []).push([["some-module_js"], {
"./some-module.js": function (__unused_webpack_module, __webpack_exports__, __webpack_require__) {
'use strict';
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  'Block': function() { return Block; },
  'Inline': function() { return Inline; },
  'Document': function() { return Document; }
});
class Block {
    static doSomething() {}
}
class Inline {
    static doSomething() {}
}
class Document {
    static doSomething() {}
}

},

}]);
```
