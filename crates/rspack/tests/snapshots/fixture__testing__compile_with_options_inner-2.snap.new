---
source: crates/rspack/tests/fixture.rs
assertion_line: 71
expression: bundler.assets()
---
[
    Asset {
        source: "rs.define(\"/Users/yangjian/github/rspack/crates/rspack/fixtures/dynamic-import/dynamic.js\", function(require, module, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.dynamic = void 0;\n    var dynamic = \"dynamic\";\n    exports.dynamic = dynamic;\n});\n",
        filename: "dynamic.js",
    },
    Asset {
        source: "rs.define(\"/Users/yangjian/github/rspack/crates/rspack/fixtures/dynamic-import/index.js\", function(require, module, exports) {\n    \"use strict\";\n    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n            var info = gen[key](arg);\n            var value = info.value;\n        } catch (error) {\n            reject(error);\n            return;\n        }\n        if (info.done) {\n            resolve(value);\n        } else {\n            Promise.resolve(value).then(_next, _throw);\n        }\n    }\n    function _asyncToGenerator(fn) {\n        return function() {\n            var self = this, args = arguments;\n            return new Promise(function(resolve, reject) {\n                var gen = fn.apply(self, args);\n                function _next(value) {\n                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n                }\n                function _throw(err) {\n                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n                }\n                _next(undefined);\n            });\n        };\n    }\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n    function _interopRequireWildcard(obj) {\n        if (obj && obj.__esModule) {\n            return obj;\n        } else {\n            var newObj = {};\n            if (obj != null) {\n                for(var key in obj){\n                    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                        var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n                        if (desc.get || desc.set) {\n                            Object.defineProperty(newObj, key, desc);\n                        } else {\n                            newObj[key] = obj[key];\n                        }\n                    }\n                }\n            }\n            newObj.default = obj;\n            return newObj;\n        }\n    }\n    var _regeneratorRuntime = _interopRequireDefault(require(\"regenerator-runtime\"));\n    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n        try {\n            var info = gen[key](arg);\n            var value = info.value;\n        } catch (error) {\n            reject(error);\n            return;\n        }\n        if (info.done) {\n            resolve(value);\n        } else {\n            Promise.resolve(value).then(_next, _throw);\n        }\n    }\n    function _asyncToGenerator(fn) {\n        return function() {\n            var self = this, args = arguments;\n            return new Promise(function(resolve, reject) {\n                var gen = fn.apply(self, args);\n                function _next(value) {\n                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n                }\n                function _throw(err) {\n                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n                }\n                _next(undefined);\n            });\n        };\n    }\n    function main() {\n        return _main.apply(this, arguments);\n    }\n    function _main() {\n        _main = _asyncToGenerator(_regeneratorRuntime.default.mark(function _callee() {\n            var dynamic;\n            return _regeneratorRuntime.default.wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        _ctx.next = 2;\n                        return Promise.resolve().then(function() {\n                            return _interopRequireWildcard(require(\"./dynamic\"));\n                        });\n                    case 2:\n                        dynamic = _ctx.sent.dynamic;\n                        console.log(\"dynamic:\", dynamic);\n                    case 4:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }));\n        return _main.apply(this, arguments);\n    }\n});\nrs.require(\"/Users/yangjian/github/rspack/crates/rspack/fixtures/dynamic-import/index.js\");\n",
        filename: "index.js",
    },
]
