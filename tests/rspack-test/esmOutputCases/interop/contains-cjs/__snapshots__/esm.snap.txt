```mjs title=main.mjs
import { __webpack_require__ } from "./runtime.mjs";
__webpack_require__.add({
"./foo.cjs": 
/*!*****************!*\
  !*** ./foo.cjs ***!
  \*****************/
(function (__unused_webpack_module, exports) {
exports.foo = 42


}),
"./from-esm.cjs": 
/*!**********************!*\
  !*** ./from-esm.cjs ***!
  \**********************/
(function (__unused_webpack_module, exports) {
var __webpack_unused_export__;
__webpack_unused_export__ = true
exports["default"] = 'esm'


}),
});
// ./foo.js
const value = 'value'

// ./index.js
const foo = __webpack_require__("./foo.cjs");
const from_esm = __webpack_require__("./from-esm.cjs");





it('should have correct import', () => {
	expect(foo).toHaveProperty('foo')
	expect(foo.foo).toBe(42)

	expect(from_esm["default"]).toBe('esm')

	expect(foo.foo).toBe(42)
	expect(value).toBe('value')
})


```

```mjs title=runtime.mjs

var __webpack_modules__ = {};
// The module cache
var __webpack_module_cache__ = {};
// The require function
function __webpack_require__(moduleId) {
// Check if module is in cache
var cachedModule = __webpack_module_cache__[moduleId];
if (cachedModule !== undefined) {
return cachedModule.exports;
}
// Create a new module (and put it into the cache)
var module = (__webpack_module_cache__[moduleId] = {
exports: {}
});
// Execute the module function
__webpack_modules__[moduleId](module, module.exports, __webpack_require__);

// Return the exports of the module
return module.exports;
}
// expose the modules object (__webpack_modules__)
__webpack_require__.m = __webpack_modules__;

// esm library register module runtime
(() => {
__webpack_require__.add = function registerModules(modules) { Object.assign(__webpack_require__.m, modules) }

})();

export { __webpack_require__ };

```