```mjs title=demo/index.mjs
import { __webpack_require__ } from "../runtime.mjs";
import "../main.mjs";

// ./src/demo/index.js
__webpack_require__("./other2/index.js");
const demo = () => 'demo'
;
/* ESM default export */ const src_demo = (demo);

export default src_demo;

```

```mjs title=index.mjs
import { __webpack_require__ } from "./runtime.mjs";
import "./main.mjs";
import { default as src_demo } from "./demo/index.mjs";

// ./src/index.js
__webpack_require__("./other1/index.js");



it('should preserve modules', () => {
  expect(src_demo()).toBe('demo')
})


```

```mjs title=main.mjs
import { __webpack_require__ } from "./runtime.mjs";
__webpack_require__.add({
"./other1/index.js": 
/*!*************************!*\
  !*** ./other1/index.js ***!
  \*************************/
(function () {
// other1
console.log.bind(console)


}),
"./other2/index.js": 
/*!*************************!*\
  !*** ./other2/index.js ***!
  \*************************/
(function () {
// other2
console.log.bind(console)


}),
});

```

```mjs title=runtime.mjs

var __webpack_modules__ = {};
// The module cache
var __webpack_module_cache__ = {};
// The require function
function __webpack_require__(moduleId) {
// Check if module is in cache
var cachedModule = __webpack_module_cache__[moduleId];
if (cachedModule !== undefined) {
return cachedModule.exports;
}
// Create a new module (and put it into the cache)
var module = (__webpack_module_cache__[moduleId] = {
exports: {}
});
// Execute the module function
__webpack_modules__[moduleId](module, module.exports, __webpack_require__);

// Return the exports of the module
return module.exports;
}
// expose the modules object (__webpack_modules__)
__webpack_require__.m = __webpack_modules__;

// esm library register module runtime
(() => {
__webpack_require__.add = function registerModules(modules) { Object.assign(__webpack_require__.m, modules) }

})();

export { __webpack_require__ };

```