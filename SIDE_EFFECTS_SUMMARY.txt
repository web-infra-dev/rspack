================================================================================
SIDE EFFECTS ANALYSIS - QUICK SUMMARY TABLE
mf_async_startup Feature (Disabled State Analysis)
================================================================================

FILE                                        LINE(S)  ISSUE TYPE           SEVERITY  CODE RUNS WHEN DISABLED?
────────────────────────────────────────────────────────────────────────────────────────────────────────────

CRITICAL ISSUES (New Code Paths Running Unconditionally):
─────────────────────────────────────────────────────────

JavaScript Plugin
/rspack_plugin_javascript/mod.rs            328-329  Variable allocation   MEDIUM   YES - is_federation_async created always
/rspack_plugin_javascript/mod.rs            357-358  Variable allocation   MEDIUM   YES - federation_entry_calls, all_chunk_ids always
/rspack_plugin_javascript/mod.rs            449-459  Loop logic change     MEDIUM   YES - conditional inside loop runs regardless
/rspack_plugin_javascript/mod.rs            569-593  NEW code path         HIGH     YES - executes when STARTUP_ENTRYPOINT present
/rspack_plugin_javascript/mod.rs            637-641  NEW code path         CRITICAL YES - STARTUP_NO_DEFAULT + STARTUP_ENTRYPOINT

Startup Chunk Dependencies Plugin
/rspack_plugin_runtime/startup_deps.rs      32-37    NEW early return      CRITICAL YES - EARLY EXIT affects all STARTUP_ENTRYPOINT users
                                                     (regression risk)

Array Push Callback Format
/rspack_plugin_runtime/array_push.rs        56-62    Conditional swap      MEDIUM   YES - ON_CHUNKS_LOADED still inserted
/rspack_plugin_runtime/array_push.rs        155-156  Passive flag inverted  MEDIUM   YES - passive = !mf_async_startup always

────────────────────────────────────────────────────────────────────────────────────────────────────────────

FUNCTION SIGNATURE CHANGES (Behavior Modifications):
────────────────────────────────────────────────────

Enable Chunk Loading Plugin
/rspack_plugin_runtime/lib.rs               36-77    Signature change      HIGH     YES - Different behavior for REQUIRE case
    - JSONP case: Conditional StartupChunkDependencies, always JsonpChunkLoading
    - REQUIRE case: Now passes mf_async_startup instead of hardcoded false

Web Worker
/rspack_plugin_web_worker_template/lib.rs   6        Hardcoded value       LOW      YES - Hardcodes true explicitly

Builder Context
/rspack/src/builder/builder_context.rs      146      Parameter added       MEDIUM   YES - Parameter passed to enable_chunk_loading

Raw Builtins
/rspack_binding_api/src/raw_builtins.rs     274-393  Parameter added       MEDIUM   YES - Parameter threaded through

────────────────────────────────────────────────────────────────────────────────────────────────────────────

MODULE FEDERATION PLUGINS (Mixed Impact):
──────────────────────────────────────────

Embed Federation Runtime Plugin
/rspack_plugin_mf/embed_federation_runtime  80-87    Conditional insert    MEDIUM   YES - Inserts STARTUP when disabled
/rspack_plugin_mf/embed_federation_runtime  207-227  NEW async pattern     LOW      NO - Only when mf_async_startup=true

Embed Federation Runtime Module
/rspack_plugin_mf/embed_federation_module   92-96    Startup selection     LOW      YES - Targets different startup function

Module Federation Runtime Plugin
/rspack_plugin_mf/module_federation_runtime 49-63    Conditional insert    MEDIUM   NO - Only when mf_async_startup=true

────────────────────────────────────────────────────────────────────────────────────────────────────────────

CONFIGURATION/TYPE CHANGES:
───────────────────────────

packages/rspack/config/types.ts             -        Type defs             LOW      N/A - No runtime impact
packages/rspack/config/normalization.ts     -        Config flow           LOW      YES - Parameter flows through
crates/rspack_binding_api/raw_experiments   -        Type defs             LOW      N/A - No runtime impact
crates/rspack_binding_api/lib.rs            -        Config binding        LOW      YES - Parameter passed to plugins

────────────────────────────────────────────────────────────────────────────────────────────────────────────

REGRESSION RISK RANKING:
════════════════════════

🔴 CRITICAL (Must Fix):
1. Lines 637-641 (js_plugin): STARTUP_NO_DEFAULT + STARTUP_ENTRYPOINT handling
   - Risk: Breaks non-federation code that uses STARTUP_ENTRYPOINT
   - Impact: Different runtime behavior when disabled

2. Lines 32-37 (startup_chunk_dependencies): Early return for any STARTUP_ENTRYPOINT
   - Risk: Skips STARTUP insertion for non-federation STARTUP_ENTRYPOINT
   - Impact: Bootstrapping issues in non-federation code

3. Lines 36-77 (lib.rs enable_chunk_loading_plugin): REQUIRE behavior change
   - Risk: Existing REQUIRE chunk loading gets async behavior
   - Impact: Could break synchronous chunk loading assumptions

🟠 HIGH (Should Test Thoroughly):
4. Lines 569-593 (js_plugin): NEW STARTUP_ENTRYPOINT code path
   - Risk: Executes for non-federation code with STARTUP_ENTRYPOINT
   - Impact: Unexpected startup function wrapping

5. Lines 357-358 (js_plugin): Unconditional vector allocation
   - Risk: Memory/performance overhead for all entry module scenarios
   - Impact: Slight performance regression

🟡 MEDIUM (Monitor):
6. Lines 155-156 (array_push): Passive flag inversion
   - Risk: Semantic change affects entry startup generation
   - Impact: Subtle behavioral differences in entry modules

7. Lines 80-87 (embed_federation_runtime): Duplicate requirement insertions
   - Risk: Both js_plugin and embed_federation_runtime insert STARTUP
   - Impact: Possible double execution or conflicts

📋 LOW (Unlikely Issues):
8. Lines 5-6 (web_worker): Hardcoded true value
   - Risk: Comment doesn't match implementation
   - Impact: Maintenance confusion, no runtime impact

────────────────────────────────────────────────────────────────────────────────────────────────────────────

KEY FINDINGS:
═════════════

1. NEW UNCONDITIONAL CODE: 8+ new code paths execute when mf_async_startup=false
2. VARIABLE ALLOCATION: 3 new variables always created, only used conditionally
3. EARLY EXITS: startup_chunk_dependencies.rs has new unconditional early return
4. SIGNATURE CHANGES: Function signatures changed, all callers correctly updated
5. BEHAVIOR INVERSIONS: passive flag now inverted (passive = !mf_async_startup)
6. FEATURE SCOPE VIOLATION: Changes affect non-federation code paths

TOTAL UNPROTECTED CODE PATHS: 12
CRITICAL ISSUES: 3
HIGH ISSUES: 2
MEDIUM ISSUES: 3
LOW ISSUES: 4

────────────────────────────────────────────────────────────────────────────────────────────────────────────

SPECIFIC RECOMMENDATIONS:
═════════════════════════

1. GUARD STARTUP_ENTRYPOINT HANDLING
   File: js_plugin/mod.rs, lines 569-593, 637-641
   Action: Add check: if !is_federation_async && mf_async_startup && has_startup_entrypoint
   Prevents: Non-federation STARTUP_ENTRYPOINT from being processed

2. EXTRACT VARIABLE ALLOCATION
   File: js_plugin/mod.rs, lines 357-358
   Action: Move inside `if is_federation_async { }` block
   Prevents: Unconditional memory allocation

3. ADD FEATURE CHECK TO EARLY EXIT
   File: startup_chunk_dependencies.rs, lines 32-37
   Action: Add check: if startup_entrypoint && mf_async_startup before early return
   Prevents: Skipping STARTUP for non-federation STARTUP_ENTRYPOINT

4. DOCUMENT REQUIRE BEHAVIOR CHANGE
   File: lib.rs, enable_chunk_loading_plugin function
   Action: Add breaking change notice for REQUIRE case
   Prevents: Silent behavior changes in existing code

5. ADD REGRESSION TEST SUITE
   Scenarios:
   - Test STARTUP_ENTRYPOINT without mf_async_startup enabled
   - Test REQUIRE chunk loading with various mf_async_startup values
   - Test array_push_callback with passive flag edge cases
   - Test non-federation module federation runtime interactions

════════════════════════════════════════════════════════════════════════════════════════════════════════════
