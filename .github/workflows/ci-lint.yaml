name: CI-Lint

on:
  pull_request:
    types: [opened, synchronize]
  merge_group:
    types: [checks_requested]
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "website/**"
    tags-ignore:
      - "**"
jobs:
  check-changed:
    runs-on: ubuntu-latest
    name: Check Source Changed
    outputs:
      code_changed: ${{ steps.filter.outputs.code_changed == 'true' }}
      document_changed: ${{ steps.filter.outputs.document_changed == 'true' }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          predicate-quantifier: "every"
          filters: |
            code_changed:
              - "!**/*.md"
              - "!**/*.mdx"
              - "!website/**"
            document_changed:
              - "website/**"

  lint:
    name: Lint and format code
    runs-on: ubuntu-latest
    needs: [check-changed]
    if: ${{ needs.check-changed.outputs.code_changed == 'true' }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: changes
        with:
          filters: |
            src:
              - pnpm-lock.yaml
              - '**/*.{ts,tsx,mts,cts,js,cjs,mjs,jsx}'

      - name: Pnpm Setup
        uses: ./.github/actions/pnpm/setup

      - name: Pnpm Install
        uses: ./.github/actions/pnpm/install-dependencies

      - name: Lint js
        run: |
          pnpm run lint-ci:js
          pnpm run lint:type

      - name: Prettier
        run: pnpm run format-ci:js

      - name: Check Dependency Version
        run: pnpm run check-dependency-version

      - name: API change check
        run: |
          echo "===================================="
          echo "Note: force build npm packages with \`pnpm build:js\` and  \`pnpm api-extractor:local\` locally to generate API change if \`api-extractor\` check failed."
          echo "$ pnpm build:js && pnpm api-extractor:local"
          echo "===================================="
          pnpm build:js
          pnpm api-extractor:ci

      - name: Documentation coverage check
        run: pnpm doc-coverage

  lint-website:
    name: Lint and format website
    runs-on: ubuntu-latest
    needs: [check-changed]
    if: ${{ needs.check-changed.outputs.document_changed == 'true' }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Pnpm Setup
        uses: ./.github/actions/pnpm/setup

      - name: Pnpm Install
        uses: ./.github/actions/pnpm/install-dependencies

      - name: Run
        run: |
          cd website
          pnpm install
          pnpm run check:ci

  spell:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: crate-ci/typos@a67079b4ae32e18c3f53d75368c52ce53b5fb56b # v1.35.4
        with:
          files: .

  pnpm_lockfile_check:
    name: Pnpm Lockfile Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Pnpm Setup
        uses: ./.github/actions/pnpm/setup

      - name: Pnpm Install
        uses: ./.github/actions/pnpm/install-dependencies
        with:
          frozen-lockfile: true
  lint_required_check:
    # this job will be used for GitHub actions to determine required job success or not;
    # When code changed, it will check if any of the test jobs failed.
    # When *only* doc changed, it will run as success directly
    name: Lint Required Check
    needs: [lint, lint-website, check-changed, spell, pnpm_lockfile_check]
    if: ${{ always() && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Log
        run: echo ${{ join(needs.*.result, ',') }}
      - name: Code Lint check
        if: ${{ needs.check-changed.outputs.code_changed == 'true'  &&
          needs.lint.result != 'success'
          }}
        run: echo "Code Lint Failed" && exit 1
      - name: Doc Lint Check
        if: ${{ needs.check-changed.outputs.document_changed == 'true'
          && needs.lint-website.result != 'success'}}
        run: echo "Website Lint Failed" && exit 1
