name: CI-Rust

on:
  pull_request:
    types: [ opened, synchronize ]
  merge_group:
    types: [ checks_requested ]
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - 'crates/**'
      - 'Cargo.lock'
      - 'Cargo.toml'
      - 'rust-toolchain.toml'
    tags-ignore:
      - "**"
jobs:
  rust_check:
    name: Rust check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          save-if: false
          key: check

      - name: Pnpm Setup
        uses: ./.github/actions/pnpm/setup

      - name: Run Cargo Check
        run: cargo check --workspace --all-targets --locked # Not using --release because it uses too much cache, and is also slow.

      - name: Run Clippy
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: clippy
          args: --workspace --all-targets --tests -- -D warnings

      - name: Run rustfmt
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run toml format check
        run: npm run format-ci:toml

  rust_unused_dependencies:
    name: Check Rust Dependencies
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/rustup
        with:
          key: check

      - name: Install cargo-deny
        uses: taiki-e/install-action@be7c31b6745feec79dec5eb79178466c0670bb2d # v2
        with:
          tool: cargo-deny@0.16
      - name: Check licenses
        run: cargo deny check license

      - uses: cargo-bins/cargo-binstall@63aaa5c1932cebabc34eceda9d92a70215dcead6 # v1.12.3
      - run: cargo binstall --no-confirm cargo-shear@1.1.12 --force
      - run: cargo shear

  rust_test:
    name: Rust test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          save-if: ${{ github.ref_name == 'main' }}
          key: 'check'

      # Compile test without debug info for reducing the CI cache size
      - name: Change profile.test
        shell: bash
        run: |
          echo '[profile.test]' >> Cargo.toml
          echo 'debug = false' >> Cargo.toml
      - name: Run rspack test
        run: cargo test --workspace --exclude rspack_node -- --nocapture

  rust_test_miri:
    name: Rust test miri
    # TODO: enable it after self hosted runners are ready
    # if: needs.rust_changes.outputs.changed == 'true' && github.ref_name == 'main' && github.repository_owner == 'web-infra-dev'
    if: false
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          save-if: ${{ github.ref_name == 'main' }}
          key: check

      # Compile test without debug info for reducing the CI cache size
      - name: Change profile.test
        shell: bash
        run: |
          echo '[profile.test]' >> Cargo.toml
          echo 'debug = false' >> Cargo.toml

      - name: Run test
        env:
          MIRIFLAGS: -Zmiri-tree-borrows -Zmiri-disable-isolation
        # reason for excluding https://github.com/napi-rs/napi-rs/issues/2200
        run: cargo miri test --workspace --exclude rspack_node -- --nocapture

  cargo-deny:
    name: Check license of dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            src:
              - 'Cargo.lock'

