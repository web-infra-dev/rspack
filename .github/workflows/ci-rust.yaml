name: CI-Rust

on:
  pull_request:
    types: [opened, synchronize]
  merge_group:
    types: [checks_requested]
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/**"
      - "crates/**"
      - "Cargo.lock"
      - "Cargo.toml"
      - "rust-toolchain.toml"
    tags-ignore:
      - "**"
jobs:
  rust_tests:
    name: Run Rust Tests
    uses: ./.github/workflows/reusable-rust-test.yml

  rust_test_miri:
    name: Rust test miri
    # TODO: enable it after self hosted runners are ready
    # if: needs.rust_changes.outputs.changed == 'true' && github.ref_name == 'main' && github.repository_owner == 'web-infra-dev'
    if: false
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          save-if: ${{ github.ref_name == 'main' }}
          key: check

      # Compile test without debug info for reducing the CI cache size
      - name: Change profile.test
        shell: bash
        run: |
          echo '[profile.test]' >> Cargo.toml
          echo 'debug = false' >> Cargo.toml

      - name: Run test
        env:
          MIRIFLAGS: -Zmiri-tree-borrows -Zmiri-disable-isolation
        # reason for excluding https://github.com/napi-rs/napi-rs/issues/2200
        run: cargo miri test --workspace --exclude rspack_node -- --nocapture

  test_required_check:
    # this job will be used for GitHub actions to determine required job success or not;
    # When code changed, it will check if any of the test jobs failed.
    # When *only* doc changed, it will run as success directly
    name: Rust Test Required Check
    needs: [rust_tests]
    if: ${{ always() && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Log
        run: echo ${{ needs.*.result }}
      - name: Test check
        if: ${{ needs.rust_tests.result != 'success' }}
        run: echo "Tests Failed" && exit 1
      - name: No check to Run test
        run: echo "Success"
