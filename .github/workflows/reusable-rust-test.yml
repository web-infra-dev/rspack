name: Reusable Rust Test

on:
  workflow_call:

jobs:
  check-changed:
    runs-on: ubuntu-latest
    name: Check Source Changed
    outputs:
      code_changed: ${{ steps.filter.outputs.code_changed == 'true' }}
      document_changed: ${{ steps.filter.outputs.document_changed == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          filters: |
            code_changed:
              - "!**/*.md"
              - "!**/*.mdx"
              - "!website/**"
            document_changed:
              - "website/**"

  rust_check:
    name: Rust check
    needs: [check-changed]
    if: ${{ needs.check-changed.outputs.code_changed == 'true' }}
    runs-on: ${{ fromJSON(vars.LINUX_SELF_HOSTED_RUNNER_LABELS ||  '"ubuntu-22.04"') }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          save-if: true
          key: check

      - name: Run Cargo codegen
        run: cargo codegen

      - name: Run Cargo Check
        run: cargo check --workspace --all-targets --locked

      - name: Run Clippy
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: clippy
          args: --workspace --all-targets --tests -- -D warnings

      - name: Run rustfmt
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
        with:
          command: fmt
          args: --all -- --check

      - name: Install tapo
        run: cargo install taplo-cli --locked
      - name: Run toml format check
        run: taplo format --check '.cargo/*.toml' './crates/**/Cargo.toml' './Cargo.toml'

  rust_unused_dependencies:
    needs: [check-changed]
    if: ${{ needs.check-changed.outputs.code_changed == 'true' }}
    name: Check Rust Dependencies
    runs-on: ${{ fromJSON(vars.LINUX_SELF_HOSTED_RUNNER_LABELS || '"ubuntu-22.04"') }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: ./.github/actions/rustup
        with:
          key: check

      - name: Run Cargo codegen
        run: cargo codegen

      - name: Install cargo-deny
        uses: taiki-e/install-action@2383334cf567d78771fc7d89b6b3802ef1412cf6 # v2
        with:
          tool: cargo-deny@0.18.3
      - name: Check licenses
        run: |
          cargo deny --all-features check license bans
          cargo deny-ext

      - uses: cargo-bins/cargo-binstall@8aac5aa2bf0dfaa2863eccad9f43c68fe40e5ec8 # v1.14.1
      - run: cargo binstall --no-confirm cargo-shear@1.1.12 --force
      - run: cargo shear

  rust_test:
    name: Rust test
    runs-on: ${{ fromJSON(vars.LINUX_SELF_HOSTED_RUNNER_LABELS || '"ubuntu-22.04"') }}
    needs: [check-changed]
    if: ${{ needs.check-changed.outputs.code_changed == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          save-if: true
          key: test

      - name: Run Cargo codegen
        run: cargo codegen

      # Compile test without debug info for reducing the CI cache size
      - name: Change profile.test
        shell: bash
        run: |
          echo '[profile.test]' >> Cargo.toml
          echo 'debug = false' >> Cargo.toml
      - name: Run rspack test
        run: |
          cargo test --workspace \
            --exclude rspack_binding_api \
            --exclude rspack_node \
            --exclude rspack_binding_builder \
            --exclude rspack_binding_builder_macros \
            --exclude rspack_binding_builder_testing \
            --exclude rspack_binding_build \
            --exclude rspack_napi \
            -- --nocapture

  test_required_check:
    name: Rust Test Required Check
    needs: [rust_test, rust_check, rust_unused_dependencies, check-changed]
    if: ${{ always() && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Log
        run: echo ${{ join(needs.*.result, ',') }}
      - name: Test check
        if: ${{ needs.check-changed.outputs.code_changed == 'true' && join(needs.*.result, ',')!='success,success,success,success' }}
        run: echo "Tests Failed" && exit 1
      - name: No check to Run test
        run: echo "Success"
