name: Release Crates

on:
  workflow_dispatch:
    inputs:
      dry_run:
        type: boolean
        description: "DryRun release"
        required: true
        default: false
      push_tags:
        type: boolean
        description: "Push tags to repository"
        required: true
        default: true

jobs:
  rust_tests:
    name: Run Rust Tests
    uses: ./.github/workflows/reusable-rust-test.yml

  release_crates:
    environment: crate
    name: Release Crates
    permissions:
      contents: write
    runs-on: ${{ fromJSON(vars.LINUX_SELF_HOSTED_RUNNER_LABELS ||  '"ubuntu-22.04"') }}
    needs: [rust_tests]
    if: ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          save-if: true
          key: release

      - uses: cargo-bins/cargo-binstall@8aac5aa2bf0dfaa2863eccad9f43c68fe40e5ec8 # v1.14.1

      - name: Install cargo-workspaces
        run: cargo binstall --no-confirm cargo-workspaces@0.4.0 --force

      - name: Pnpm Setup
        uses: ./.github/actions/pnpm/setup

      - name: Pnpm Install
        uses: ./.github/actions/pnpm/install-dependencies

      - name: Run Cargo codegen
        run: cargo codegen

      - name: Publish Crates
        run: |
          ./x crate-publish --token $CARGO_REGISTRY_TOKEN ${{ inputs.dry_run && '--dry-run' || '' }} ${{ inputs.push_tags && '--push-tags' || '' }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
