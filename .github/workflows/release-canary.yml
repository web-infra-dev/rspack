# Release Canary by comment with "!canary"

name: Release Canary

on:
  issue_comment:
    types: [created]

jobs:
  build:
    name: Build Canary
    if: github.event.issue.pull_request && contains(github.event.comment.body, '!canary')
    strategy:
      fail-fast: false # Build and test everything so we can look at all the errors
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-unknown-linux-gnu # For Cloud IDE
    uses: ./.github/workflows/reusable-build.yml
    with:
      target: ${{ matrix.target }}
      test: false

  release:
    name: Release Canary
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Pnpm Cache
        uses: ./.github/actions/pnpm-cache

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Build node packages
        run: pnpm run build:js

      - name: Move artifacts
        run: node scripts/build-npm.cjs

      - name: Show binding packages
        run: ls -R npm

      - name: Resolve dependencies for bindings
        run: pnpm install --no-frozen-lockfile

      - name: Release
        run: |
          ./x version snapshot
          ./x publish snapshot --tag canary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          REPOSITORY: ${{ github.repository }}
          PULL_REQUEST_NUMBER: ${{ github.event.issue.number }}
          COMMENT: ${{ toJson(github.event.comment) }}

      - name: Write a new comment
        uses: peter-evans/create-or-update-comment@v3
        continue-on-error: true
        with:
          issue-number: ${{ github.event.issue.number }}

          body-path: 'version_output'
