name: CI

on:
  merge_group:
    types: [checks_requested]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - "**/*.md"
    branches-ignore:
      - "release-**"
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
    tags-ignore:
      - "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  get-runner-labels:
    name: Get Runner Labels
    uses: ./.github/workflows/get-runner-labels.yml

  test-linux:
    name: Test Linux
    needs: [get-runner-labels]
    uses: ./.github/workflows/reusable-build.yml
    with:
      target: x86_64-unknown-linux-gnu
      profile: "debug"
      runner: ${{ needs.get-runner-labels.outputs.LINUX_RUNNER_LABELS }}

  # test-windows:
  #   name: Test Windows
  #   uses: ./.github/workflows/reusable-build.yml
  #   with:
  #     target: x86_64-pc-windows-msvc
  #     profile: "debug"

  test-mac:
    name: Test Mac
    needs: [get-runner-labels]
    if: github.ref_name == 'main'
    uses: ./.github/workflows/reusable-build.yml
    with:
      target: x86_64-apple-darwin
      profile: "debug"
      runner: ${{ needs.get-runner-labels.outputs.MACOS_RUNNER_LABELS }}
  cargo-deny:
    name: Check license of dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install cargo-deny
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-deny
          version: "0.11.3"

      - name: Check licenses
        run: |
          cargo deny check license
  spell:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: crate-ci/typos@master
        with:
          files: .

  oxlint:
    name: Lint JS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '**/*.{ts,js,mjs}'

      - name: Pnpm Cache
        if: steps.changes.outputs.src == 'true'
        uses: ./.github/actions/pnpm-cache

      - name: oxlint
        if: steps.changes.outputs.src == 'true'
        run: pnpm run lint:js

  rust_changes:
    name: Rust Changes
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            changed:
              - '.github/workflows/ci.yml'
              - 'crates/**'
              - 'Cargo.lock'
              - 'Cargo.toml'
              - 'rust-toolchain.toml'

  pnpm_lockfile_check:
    name: Pnpm Lockfile Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Pnpm Cache # Required by some tests
        uses: ./.github/actions/pnpm-cache
        with:
          frozen-lockfile: true

  rust_check:
    name: Rust check
    needs: [get-runner-labels, rust_changes]
    if: ${{ needs.rust_changes.outputs.changed == 'true' }}
    runs-on: ${{ fromJSON(needs.get-runner-labels.outputs.LINUX_RUNNER_LABELS) }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          clippy: true
          fmt: true
          shared-key: check

      - name: Run Cargo Check
        run: cargo check --workspace --all-targets --locked # Not using --release because it uses too much cache, and is also slow.

      - name: Run Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --all-targets -- -D warnings

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  rust_test:
    name: Rust test
    needs: [get-runner-labels, rust_changes]
    if: ${{ needs.rust_changes.outputs.changed == 'true' }}
    runs-on: ${{ fromJSON(needs.get-runner-labels.outputs.LINUX_RUNNER_LABELS) }}
    steps:
      - uses: actions/checkout@v3

      - name: Pnpm Cache # Required by some tests
        uses: ./.github/actions/pnpm-cache

      - name: Install Rust Toolchain
        uses: ./.github/actions/rustup
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          shared-key: check

      # Compile test without debug info for reducing the CI cache size
      - name: Change profile.test
        shell: bash
        run: |
          echo '[profile.test]' >> Cargo.toml
          echo 'debug = false' >> Cargo.toml

      - name: Run test
        run: cargo test --workspace -- --nocapture
