name: CI

on:
  merge_group:
    types: [ checks_requested ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: "Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)"
        required: false
        default: false
  pull_request:
    types: [ opened, synchronize ]
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "website/**"
    tags-ignore:
      - "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

permissions:
  # Allow commenting on issues for `reusable-build.yml`
  issues: write

jobs:
  get-runner-labels:
    name: Get Runner Labels
    uses: ./.github/workflows/get-runner-labels.yml

  check-changed:
    runs-on: ubuntu-latest
    name: Check Source Changed
    outputs:
      changed: ${{ steps.filter.outputs.changed == 'true' }}
      document_changed: ${{ steps.document_filter.outputs.changed == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: filter
        with:
          predicate-quantifier: "every"
          filters: |
            changed:
              - "!**/*.md"
              - "!**/*.mdx"
              - "!website/**"
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: document_filter
        with:
          predicate-quantifier: "every"
          filters: |
            changed:
              - "website/**"

  test-linux:
    name: Test Linux
    needs: [ get-runner-labels, check-changed ]
    if: ${{ needs.check-changed.outputs.changed == 'true' }}
    uses: ./.github/workflows/reusable-build.yml
    with:
      target: x86_64-unknown-linux-gnu
      runner: ${{ needs.get-runner-labels.outputs.LINUX_RUNNER_LABELS }}
      test: true
      bench: true

  test-windows:
    name: Test Windows
    needs: [ get-runner-labels, check-changed ]
    if: ${{ needs.check-changed.outputs.changed == 'true' }}
    uses: ./.github/workflows/reusable-build.yml
    with:
      target: x86_64-pc-windows-msvc
      profile: "dev"
      runner: ${{ needs.get-runner-labels.outputs.WINDOWS_RUNNER_LABELS }}
      test: true

  test-mac:
    name: Test Mac ARM64
    needs: [ get-runner-labels, check-changed ]
    if: github.ref_name == 'main' && needs.check-changed.outputs.changed == 'true'
    uses: ./.github/workflows/reusable-build.yml
    with:
      target: aarch64-apple-darwin
      profile: "ci"
      runner: ${{ needs.get-runner-labels.outputs.MACOS_RUNNER_LABELS }}
      test: true

  test-wasm:
    name: Test WASM
    needs: [ get-runner-labels, check-changed ]
    uses: ./.github/workflows/reusable-build.yml
    with:
      target: wasm32-wasip1-threads
      profile: "ci"
      runner: ${{ needs.get-runner-labels.outputs.LINUX_RUNNER_LABELS }}
      test: false

  spell:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: crate-ci/typos@b1a1ef3893ff35ade0cfa71523852a49bfd05d19 # v1.31.1
        with:
          files: .

  lint:
    name: Lint and format code
    runs-on: ubuntu-latest
    needs: [ check-changed ]
    if: ${{ needs.check-changed.outputs.changed == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3
        id: changes
        with:
          filters: |
            src:
              - pnpm-lock.yaml
              - '**/*.{ts,tsx,mts,cts,js,cjs,mjs,jsx}'

      - name: Pnpm Setup
        uses: ./.github/actions/pnpm/setup

      - name: Pnpm Install
        uses: ./.github/actions/pnpm/install-dependencies

      - name: Lint js
        if: steps.changes.outputs.src == 'true'
        run: pnpm run lint-ci:js

      - name: Prettier
        if: steps.changes.outputs.src == 'true'
        run: pnpm run format-ci:js

      - name: Check Dependency Version
        if: steps.changes.outputs.src == 'true'
        run: pnpm run check-dependency-version

      - name: API change check
        if: steps.changes.outputs.src == 'true'
        run: |
          echo "===================================="
          echo "Note: force build npm packages with \`pnpm build:js\` and  \`pnpm api-extractor:local\` locally to generate API change if \`api-extractor\` check failed."
          echo "$ pnpm build:js && pnpm api-extractor:local"
          echo "===================================="
          pnpm build:js
          pnpm api-extractor:ci

      - name: Documentation coverage check
        if: steps.changes.outputs.src == 'true'
        run: pnpm doc-coverage

  lint-website:
    name: Lint and format website
    runs-on: ubuntu-latest
    needs: [ check-changed ]
    if: ${{ needs.check-changed.outputs.document_changed == 'true' }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Pnpm Setup
        uses: ./.github/actions/pnpm/setup

      - name: Pnpm Install
        uses: ./.github/actions/pnpm/install-dependencies

      - name: Run
        run: |
          cd website
          pnpm install
          pnpm run check:ci

  pnpm_lockfile_check:
    name: Pnpm Lockfile Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Pnpm Setup
        uses: ./.github/actions/pnpm/setup

      - name: Pnpm Install
        uses: ./.github/actions/pnpm/install-dependencies
        with:
          frozen-lockfile: true

  failure_notification:
    name: Failure Notification
    needs: [ test-linux, test-windows, test-mac ]
    if: ${{ failure() && !cancelled() && github.ref_name == 'main' && github.repository_owner == 'web-infra-dev' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 20
      - shell: bash
        run: ./scripts/alert/lark.js
        env:
          TITLE: CI failed on main branch
          DESCRIPTION: |
            commitID: [${{github.sha}}](${{github.server_url}}/${{github.repository}}/commit/${{github.sha}})
          URL: ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
          LARK_WEBHOOK_URL: ${{secrets.LARK_WEBHOOK_URL}}

  # TODO: enable it after self hosted runners are ready
  # pkg-preview:
  #   name: Pkg Preview
  #   needs:
  #     - test-linux
  #     - test-windows
  #     - cargo-deny
  #     - lint
  #     - rust_check
  #     - rust_test
  #   # after merged to main branch
  #   if: ${{ !failure() && github.event_name == 'push' }}
  #   uses: ./.github/workflows/preview-commit.yml
