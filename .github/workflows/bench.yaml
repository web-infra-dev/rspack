name: Benchmark

on:
  issue_comment:
    types: [created]
# jobs:
#   benchmarks:
#     name: Benchmarks
#     if: github.event.issue.pull_request && contains(github.event.comment.body, '!bench')
#     runs-on: [self-hosted, rspack-bench]
#     timeout-minutes: 30
#     steps:
#       - name: Cancel Previous Runs
#         uses: styfle/cancel-workflow-action@0.9.1
#         with:
#           access_token: ${{ github.token }}
#       # - name: Cache
#       #   uses: speedy-js/rust-cache-self-hosted@v1
#       - name: PR Benchmarks
#         uses: speedy-js/rspack-benchmark-action@main
#         env:
#           PR_STATS_COMMENT_TOKEN: ${{ secrets.PR_STATS_COMMENT_TOKEN }}
#       - name: Clean working directory
#         shell: bash
#         run: |
#           cd $RUNNER_WORKSPACE
#           cd ..
#           rm -r *
env:
  RUST_LOG: info

jobs:
  bench:
    name: Bench
    if: github.event.issue.pull_request && contains(github.event.comment.body, '!bench')
    runs-on: [self-hosted, rspack-bench]
    timeout-minutes: 30

    steps:
      - name: Cleanup workspace
        uses: TooMuch4U/actions-clean@v2.1
        if: ${{ always() }}
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const response = await github.request(context.payload.issue.pull_request.url);
            return response.data.head.sha;
      - name: Install protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR Branch
        uses: actions/checkout@v3
        with:
          submodules: false
          ref: ${{ steps.sha.outputs.result }}

      - name: Install toolchain
        run: rustup show

      - name: Cache
        uses: speedy-js/rust-cache-self-hosted@v1

      - name: Install critcmp
        run: cargo install critcmp

      - name: Run Bench on PR Branch
        run: cargo bench --bench main -- --save-baseline pr

      - name: Checkout Next Branch
        uses: actions/checkout@v3
        with:
          clean: false
          ref: next

      - name: Run Bench on Next Branch
        run: cargo bench --bench main -- --save-baseline baseline

      - name: Compare Bench Results
        id: bench_comparison
        shell: bash
        run: |
          echo "### Benchmark Results" > output
          echo "\`\`\`"  >> output
          critcmp baseline pr >> output
          echo "\`\`\`" >> output
          cat output
          comment="$(cat output)"
          comment="${comment//'%'/'%25'}"
          comment="${comment//$'\n'/'%0A'}"
          comment="${comment//$'\r'/'%0D'}"
          echo "::set-output name=comment::$comment"
      - name: Write a new comment
        uses: peter-evans/create-or-update-comment@v1.4.5
        continue-on-error: true
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ${{ steps.bench_comparison.outputs.comment }}
      - name: Remove Criterion Artifact
        run: rm -rf ./target/criterion
