name: release snapshot
on:
  issue_comment:
    types: [created]
jobs:
  release:
    name: release-snapshot
    if: github.event.issue.pull_request && contains(github.event.comment.body, '!snapshot')
    runs-on: [self-hosted, rspack-common, macOS, ARM64]
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const response = await github.request(context.payload.issue.pull_request.url);
            return response.data.head.sha;
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          submodules: false
          ref: ${{ steps.sha.outputs.result }}
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-08-06
          profile: default
          components: rustfmt, clippy, cargo
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          architecture: "arm64"
      - name: install pnpm
        run: |
          npm install -g pnpm
          pnpm install
      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
           //registry.npmjs.org/:_authToken=$NPM_TOKEN
           EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: release snapshot
        id: release
        run: |
          pnpm version:snapshot $(git rev-parse --short HEAD)
          ./x build cli:release:all
          pnpm release:snapshot
          comment=$(./x pkg-version)
          echo "::set-output name=comment::$comment"
      - name: Write a new comment
        uses: peter-evans/create-or-update-comment@v1.4.5
        continue-on-error: true
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ${{ steps.release.outputs.comment }}
