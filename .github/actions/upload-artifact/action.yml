name: Upload Artifact

description: Upload file to local or artifact to quickly share files between jobs

inputs:
  name:
    description: 'Artifact name'
    default: 'artifact'
  path:
    description: 'A file, directory or wildcard pattern that describes what to upload'
    required: true
  try-local-cache:
    description: 'Try use local cache to save artifact'
    default: false
    required: false
    type: boolean
  mv-when-local:
    description: 'Move file instead of copy file'
    default: false
    type: boolean
    required: false

outputs:
  runner-labels:
    description: "The runner labels that download artifact action should run on"
    value: ${{ steps.upload-local.outputs.runner-labels }}

runs:
  using: composite
  steps:
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      if: ${{ startsWith(runner.name, 'GitHub Actions') || inputs.try-local-cache == 'false' }}
      with:
        name: ${{ inputs.name }}
        path: ${{ inputs.path }}
        if-no-files-found: error
    - name: Upload local
      id: upload-local
      if: ${{ !startsWith(runner.name, 'GitHub Actions') && inputs.try-local-cache == 'true' }}
      shell: bash
      run: |
        set -e
        cache_dir=$HOME/.cache/runner
        if [[ ! -d "$cache_dir" ]]; then
          mkdir -p "$cache_dir"
        fi
        # clear cache directory older than 3 hours
        find $cache_dir -type d -maxdepth 1 -mindepth 1 -cmin +180 | xargs rm -rf

        # save file
        save_dir="$cache_dir/${{ github.repository_id }}-${{ github.run_id }}-${{ inputs.name }}"
        rm -rf $save_dir
        mkdir $save_dir
        if [ "${{ inputs.mv-when-local }}" = "true" ]; then
          mv ${{ inputs.path }} $save_dir
          echo "mv ${{ inputs.path }} $save_dir"
        else
          cp -r ${{ inputs.path }} $save_dir
          echo "cp -r ${{ inputs.path }} $save_dir"
        fi

        # TODO echo machine name as runner labels
        # echo "runner_labels=\"$(uname -n)\"" >> "$GITHUB_OUTPUT"
        echo 'runner-labels="rspack-ci"' >> "$GITHUB_OUTPUT"
