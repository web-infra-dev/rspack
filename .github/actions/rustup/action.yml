# This action installs the minimal Rust profile and configures Swatinem/rust-cache.
#
# It is needed to install as few Rust components as possbile because
# it takes a few minutes to install some of components on Windows and Mac, especially rust-doc.

name: Rustup

description: Install Rust with cache

inputs:
  # See https://rust-lang.github.io/rustup/concepts/components.html
  clippy:
    default: false
    required: false
    type: boolean
  fmt:
    default: false
    required: false
    type: boolean
  docs:
    default: false
    required: false
    type: boolean
  miri:
    default: false
    required: false
    type: boolean
  save-cache:
    default: false
    required: false
    type: boolean
  shared-key:
    default: "check"
    required: false
    type: string

runs:
  using: composite
  steps:
    - name: Print Inputs
      shell: bash
      run: |
        echo 'clippy: ${{ inputs.clippy }}'
        echo 'fmt: ${{ inputs.fmt }}'
        echo 'docs: ${{ inputs.docs }}'
        echo 'save-cache: ${{ inputs.save-cache }}'
        echo 'shared-key: ${{ inputs.shared-key }}'

    # install components for nightly toolchain
    - name: Install
      shell: bash
      run: |
        channel=$(grep -E "^channel\s*=" rust-toolchain.toml | sed -n -E 's/^[ \t]*channel[ \t]*=[ \t]*"([^"]*)"[^#]*.*$/\1/p' | tr -d '[:space:]')
        rustup toolchain install $channel -c rustc -c cargo -c rust-std ${{ inputs.clippy == 'true' && '-c clippy' || '' }} ${{ inputs.fmt == 'true' && '-c rustfmt' || '' }} ${{ inputs.docs == 'true' && '-c rust-docs' || '' }} ${{ inputs.miri == 'true' && '-c miri' || '' }}

    - name: Cache on ${{ github.ref_name }}
      uses: ./.github/actions/rustup/cache
      with:
        key: ${{ inputs.shared-key }}
