// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`multi compiler should work with one web target configuration and do nothing: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "Hey.",
]
`;

exports[`multi compiler should work with one web target configuration and do nothing: page errors 1`] = `[]`;

exports[`multi compiler should work with universal configuration and do nothing: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "Hello from the browser",
]
`;

exports[`multi compiler should work with universal configuration and do nothing: page errors 1`] = `[]`;

exports[`multi compiler should work with universal configuration when hot and live reloads are enabled, and do hot reload for browser compiler by default when browser entry changed: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "Hello from the browser",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App hot update...",
  "[HMR] Checking for updates on the server...",
  "[HMR] Cannot apply update. Need to do a full reload!",
  "[HMR] Error: Aborted because ./browser.js is not accepted
Update propagation: ./browser.js
    <stack>",
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "Hello from the browser",
]
`;

exports[`multi compiler should work with universal configuration when hot and live reloads are enabled, and do hot reload for browser compiler by default when browser entry changed: page errors 1`] = `[]`;

exports[`multi compiler should work with universal configuration when only hot reload is enabled, and do hot reload for browser compiler when browser entry changed: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading disabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "Hello from the browser",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App hot update...",
  "[HMR] Checking for updates on the server...",
  "[HMR] Cannot apply update. Need to do a full reload!",
  "[HMR] Error: Aborted because ./browser.js is not accepted
Update propagation: ./browser.js
    <stack>",
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading disabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "Hello from the browser",
]
`;

exports[`multi compiler should work with universal configuration when only hot reload is enabled, and do hot reload for browser compiler when browser entry changed: page errors 1`] = `[]`;

exports[`multi compiler should work with universal configuration when only live reload is enabled, and do live reload for browser compiler when changing browser and server entries: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "Hello from the browser",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App updated. Reloading...",
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "Hello from the browser",
]
`;

exports[`multi compiler should work with universal configuration when only live reload is enabled, and do live reload for browser compiler when changing browser and server entries: console messages 2`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "Hello from the browser",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App updated. Reloading...",
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "Hello from the browser",
]
`;

exports[`multi compiler should work with universal configuration when only live reload is enabled, and do live reload for browser compiler when changing browser and server entries: page errors 1`] = `[]`;

exports[`multi compiler should work with universal configuration when only live reload is enabled, and do live reload for browser compiler when changing browser and server entries: page errors 2`] = `[]`;

exports[`multi compiler should work with universal configuration when only live reload is enabled, and do live reload for browser compiler when changing server and browser entries: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "Hello from the browser",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App updated. Reloading...",
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "Hello from the browser",
]
`;

exports[`multi compiler should work with universal configuration when only live reload is enabled, and do live reload for browser compiler when changing server and browser entries: console messages 2`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "Hello from the browser",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App updated. Reloading...",
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "Hello from the browser",
]
`;

exports[`multi compiler should work with universal configuration when only live reload is enabled, and do live reload for browser compiler when changing server and browser entries: page errors 1`] = `[]`;

exports[`multi compiler should work with universal configuration when only live reload is enabled, and do live reload for browser compiler when changing server and browser entries: page errors 2`] = `[]`;

exports[`multi compiler should work with web target configurations and do nothing: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "one",
]
`;

exports[`multi compiler should work with web target configurations and do nothing: console messages 2`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "two",
]
`;

exports[`multi compiler should work with web target configurations and do nothing: page errors 1`] = `[]`;

exports[`multi compiler should work with web target configurations and do nothing: page errors 2`] = `[]`;

exports[`multi compiler should work with web target configurations when hot and live reloads are enabled, and do hot reload by default when changing own entries: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "one",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App hot update...",
  "[HMR] Checking for updates on the server...",
  "[HMR] Cannot apply update. Need to do a full reload!",
  "[HMR] Error: Aborted because ./one.js is not accepted
Update propagation: ./one.js
    <stack>",
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "one",
]
`;

exports[`multi compiler should work with web target configurations when hot and live reloads are enabled, and do hot reload by default when changing own entries: console messages 2`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "two",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App hot update...",
  "[HMR] Checking for updates on the server...",
  "[HMR] Cannot apply update. Need to do a full reload!",
  "[HMR] Error: Aborted because ./two.js is not accepted
Update propagation: ./two.js
    <stack>",
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "two",
]
`;

exports[`multi compiler should work with web target configurations when hot and live reloads are enabled, and do hot reload by default when changing own entries: page errors 1`] = `[]`;

exports[`multi compiler should work with web target configurations when hot and live reloads are enabled, and do hot reload by default when changing own entries: page errors 2`] = `[]`;

exports[`multi compiler should work with web target configurations when only hot reload is enabled, and do hot reload when changing own entries: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading disabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "one",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App hot update...",
  "[HMR] Checking for updates on the server...",
  "[HMR] Cannot apply update. Need to do a full reload!",
  "[HMR] Error: Aborted because ./one.js is not accepted
Update propagation: ./one.js
    <stack>",
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading disabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "one",
]
`;

exports[`multi compiler should work with web target configurations when only hot reload is enabled, and do hot reload when changing own entries: console messages 2`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading disabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "two",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App hot update...",
  "[HMR] Checking for updates on the server...",
  "[HMR] Cannot apply update. Need to do a full reload!",
  "[HMR] Error: Aborted because ./two.js is not accepted
Update propagation: ./two.js
    <stack>",
  "[webpack-dev-server] Server started: Hot Module Replacement enabled, Live Reloading disabled, Progress disabled, Overlay enabled.",
  "[HMR] Waiting for update signal from WDS...",
  "two",
]
`;

exports[`multi compiler should work with web target configurations when only hot reload is enabled, and do hot reload when changing own entries: page errors 1`] = `[]`;

exports[`multi compiler should work with web target configurations when only hot reload is enabled, and do hot reload when changing own entries: page errors 2`] = `[]`;

exports[`multi compiler should work with web target configurations when only live reload is enabled and do live reload when changing other entries: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "one",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App updated. Reloading...",
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "one",
]
`;

exports[`multi compiler should work with web target configurations when only live reload is enabled and do live reload when changing other entries: console messages 2`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "two",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App updated. Reloading...",
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "two",
]
`;

exports[`multi compiler should work with web target configurations when only live reload is enabled and do live reload when changing other entries: page errors 1`] = `[]`;

exports[`multi compiler should work with web target configurations when only live reload is enabled and do live reload when changing other entries: page errors 2`] = `[]`;

exports[`multi compiler should work with web target configurations when only live reload is enabled, and do live reload when changing own entries: console messages 1`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "one",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App updated. Reloading...",
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "one",
]
`;

exports[`multi compiler should work with web target configurations when only live reload is enabled, and do live reload when changing own entries: console messages 2`] = `
[
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "two",
  "[webpack-dev-server] App updated. Recompiling...",
  "[webpack-dev-server] App updated. Reloading...",
  "[webpack-dev-server] Server started: Hot Module Replacement disabled, Live Reloading enabled, Progress disabled, Overlay enabled.",
  "two",
]
`;

exports[`multi compiler should work with web target configurations when only live reload is enabled, and do live reload when changing own entries: page errors 1`] = `[]`;

exports[`multi compiler should work with web target configurations when only live reload is enabled, and do live reload when changing own entries: page errors 2`] = `[]`;
