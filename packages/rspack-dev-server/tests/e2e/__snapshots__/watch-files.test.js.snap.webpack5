// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`watchFiles option should not crash if file doesn't exist should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should not crash if file doesn't exist should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should not crash if file doesn't exist should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with array config should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with array config should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with array config should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with object with multiple paths should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with object with multiple paths should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with object with multiple paths should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with object with single path should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with object with single path should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with object with single path should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"interval":400,"poll":200} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 400,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"interval":400,"poll":200} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"interval":400,"poll":200} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"interval":400,"poll":200} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"poll":200} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"poll":200} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"poll":200} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"poll":200} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"poll":true} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": undefined,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"poll":true} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"poll":true} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"poll":true} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":false,"interval":200,"poll":400} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": false,
}
`;

exports[`watchFiles option should work with options {"usePolling":false,"interval":200,"poll":400} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"usePolling":false,"interval":200,"poll":400} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"usePolling":false,"interval":200,"poll":400} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":200} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": false,
}
`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":200} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":200} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":200} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":true} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": undefined,
  "persistent": true,
  "usePolling": false,
}
`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":true} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":true} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"usePolling":false,"poll":true} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":false} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": undefined,
  "persistent": true,
  "usePolling": false,
}
`;

exports[`watchFiles option should work with options {"usePolling":false} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"usePolling":false} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"usePolling":false} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":true,"interval":200,"poll":400} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"usePolling":true,"interval":200,"poll":400} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"usePolling":true,"interval":200,"poll":400} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"usePolling":true,"interval":200,"poll":400} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":true,"poll":200} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": 200,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"usePolling":true,"poll":200} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"usePolling":true,"poll":200} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"usePolling":true,"poll":200} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with options {"usePolling":true} should reload when file content is changed 1`] = `
{
  "alwaysStat": true,
  "atomic": false,
  "followSymlinks": false,
  "ignoreInitial": true,
  "ignorePermissionErrors": true,
  "ignored": undefined,
  "interval": undefined,
  "persistent": true,
  "usePolling": true,
}
`;

exports[`watchFiles option should work with options {"usePolling":true} should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with options {"usePolling":true} should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with options {"usePolling":true} should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with string and glob should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with string and glob should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with string and glob should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with string and path to directory should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with string and path to directory should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with string and path to directory should reload when file content is changed: response status 1`] = `200`;

exports[`watchFiles option should work with string and path to file should reload when file content is changed: console messages 1`] = `
[
  "Hey.",
]
`;

exports[`watchFiles option should work with string and path to file should reload when file content is changed: page errors 1`] = `[]`;

exports[`watchFiles option should work with string and path to file should reload when file content is changed: response status 1`] = `200`;
