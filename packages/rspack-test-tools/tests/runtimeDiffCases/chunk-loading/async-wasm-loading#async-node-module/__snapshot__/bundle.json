{
  "modules": {
    "__WORKSPACE__/packages/rspack-test-tools/tests/runtimeDiffCases/chunk-loading/async-wasm-loading\u0000#async-node-module/src/index.js": "(function () {\n  it(\"should allow to run a WebAssembly module with imports\", function () {\n    return __webpack_require__.e(\"async-wasm-loading_async-node-module_src_wasm_wat\").then(__webpack_require__.bind(__webpack_require__, \"../async-wasm-loading\\u0000#async-node-module/src/wasm.wat\")).then(function (wasm) {\n      const result = wasm.addNumber(20);\n      expect(result).toEqual(42);\n    });\n  });\n});"
  },
  "runtimeModules": {
    "webpack/runtime/bootstrap": "var __webpack_module_cache__ = {};\nfunction __webpack_require__(moduleId) {\n  var cachedModule = __webpack_module_cache__[moduleId];\n  if (cachedModule !== undefined) return cachedModule.exports;\n  var module = __webpack_module_cache__[moduleId] = {\n    \"exports\": {},\n    \"id\": moduleId\n  };\n  __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n  return module.exports;\n}\n__webpack_require__.m = __webpack_modules__;",
    "webpack/runtime/async module": "!function () {\n  var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\n  var webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\n  var webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\n  var resolveQueue = function (queue) {\n    if (queue && queue.d < 1) {\n      queue.d = 1;\n      queue.forEach(function (fn) {\n        fn.r--;\n      });\n      queue.forEach(function (fn) {\n        fn.r-- ? fn.r++ : fn();\n      });\n    }\n  };\n  var wrapDeps = function (deps) {\n    return deps.map(function (dep) {\n      if (dep !== null && typeof dep === \"object\") {\n        if (dep[webpackQueues]) return dep;\n        if (dep.then) {\n          var queue = [];\n          queue.d = 0;\n          dep.then(function (r) {\n            obj[webpackExports] = r;\n            resolveQueue(queue);\n          }, function (e) {\n            obj[webpackError] = e;\n            resolveQueue(queue);\n          });\n          var obj = {};\n          obj[webpackQueues] = function (fn) {\n            fn(queue);\n          };\n          return obj;\n        }\n      }\n      var ret = {};\n      ret[webpackQueues] = function () {};\n      ret[webpackExports] = dep;\n      return ret;\n    });\n  };\n  __webpack_require__.a = function (module, body, hasAwait) {\n    var queue;\n    hasAwait && ((queue = []).d = -1);\n    var depQueues = new Set();\n    var exports = module.exports;\n    var currentDeps;\n    var outerResolve;\n    var reject;\n    var promise = new Promise(function (resolve, rej) {\n      reject = rej;\n      outerResolve = resolve;\n    });\n    promise[webpackExports] = exports;\n    promise[webpackQueues] = function (fn) {\n      queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function () {});\n    };\n    module.exports = promise;\n    body(function (deps) {\n      currentDeps = wrapDeps(deps);\n      var fn;\n      var getResult = function () {\n        return currentDeps.map(function (d) {\n          if (d[webpackError]) throw d[webpackError];\n          return d[webpackExports];\n        });\n      };\n      var promise = new Promise(function (resolve) {\n        fn = function () {\n          resolve(getResult);\n        };\n        fn.r = 0;\n        var fnQueue = function (q) {\n          q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn)));\n        };\n        currentDeps.map(function (dep) {\n          dep[webpackQueues](fnQueue);\n        });\n      });\n      return fn.r ? promise : getResult();\n    }, function (err) {\n      err ? reject(promise[webpackError] = err) : outerResolve(exports), resolveQueue(queue);\n    });\n    queue && queue.d < 0 && (queue.d = 0);\n  };\n}();",
    "webpack/runtime/ensure chunk": "!function () {\n  __webpack_require__.f = {};\n  __webpack_require__.e = function (chunkId) {\n    return Promise.all(Object.keys(__webpack_require__.f).reduce(function (promises, key) {\n      __webpack_require__.f[key](chunkId, promises);\n      return promises;\n    }, []));\n  };\n}();",
    "webpack/runtime/get javascript chunk filename": "!function () {\n  __webpack_require__.u = function (chunkId) {\n    return \"\" + chunkId + \".chunk.js\";\n  };\n}();",
    "webpack/runtime/hasOwnProperty shorthand": "!function () {\n  __webpack_require__.o = function (obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n  };\n}();",
    "webpack/runtime/wasm loading": "!function () {\n  __webpack_require__.v = function (exports, wasmModuleId, wasmModuleHash, importsObj) {\n    return Promise.all([import(\"fs\"), import(\"url\")]).then(([{\n      \"readFile\": readFile\n    }, {\n      \"URL\": URL\n    }]) => new Promise((resolve, reject) => {\n      readFile(new URL(\"\" + wasmModuleHash + \".module.wasm\", import.meta.url), (err, buffer) => {\n        if (err) return reject(err);\n        resolve({\n          arrayBuffer() {\n            return buffer;\n          }\n        });\n      });\n    })).then(function (x) {\n      return x.arrayBuffer();\n    }).then(function (bytes) {\n      return WebAssembly.instantiate(bytes, importsObj);\n    }).then(function (res) {\n      return Object.assign(exports, res.instance.exports);\n    });\n  };\n}();",
    "webpack/runtime/import chunk loading": "!function () {\n  var installedChunks = {\n    \"main\": 0\n  };\n  var installChunk = function (data) {\n    var __webpack_ids__ = data.__webpack_ids__;\n    var __webpack_modules__ = data.__webpack_modules__;\n    var __webpack_runtime__ = data.__webpack_runtime__;\n    var moduleId,\n      chunkId,\n      i = 0;\n    for (moduleId in __webpack_modules__) if (__webpack_require__.o(__webpack_modules__, moduleId)) __webpack_require__.m[moduleId] = __webpack_modules__[moduleId];\n    if (__webpack_runtime__) __webpack_runtime__(__webpack_require__);\n    for (; i < __webpack_ids__.length; i++) {\n      chunkId = __webpack_ids__[i];\n      if (__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) installedChunks[chunkId][0]();\n      installedChunks[__webpack_ids__[i]] = 0;\n    }\n  };\n  __webpack_require__.f.j = function (chunkId, promises) {\n    var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n    if (installedChunkData !== 0) if (installedChunkData) promises.push(installedChunkData[1]);else {\n      var promise = import(\"./\" + __webpack_require__.u(chunkId)).then(installChunk, function (e) {\n        if (installedChunks[chunkId] !== 0) installedChunks[chunkId] = undefined;\n        throw e;\n      });\n      var promise = Promise.race([promise, new Promise(function (resolve) {\n        installedChunkData = installedChunks[chunkId] = [resolve];\n      })]);\n      promises.push(installedChunkData[1] = promise);\n    }\n  };\n}();"
  }
}