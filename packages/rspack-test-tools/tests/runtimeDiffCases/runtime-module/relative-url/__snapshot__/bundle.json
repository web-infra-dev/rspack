{
  "modules": {
    "asset/resource|__WORKSPACE__/packages/rspack-test-tools/tests/runtimeDiffCases/runtime-module/relative-url/src/index.css?query=yes#fragment": "(function () {\n  \"use strict\";\n\n  module.exports = __webpack_require__.p + \"index.css?query=yes#fragment\";\n});",
    "__WORKSPACE__/packages/rspack-test-tools/tests/runtimeDiffCases/runtime-module/relative-url/src/index.js": "(function () {\n  it(\"should handle import.meta.url in URL()\", () => {\n    const url = new __webpack_require__.U(__webpack_require__(\"./src/index.css?query=yes#fragment\"));\n    expect(url.href).toBe(\"public/index.css?query=yes#fragment\");\n    expect(url.origin).toBe(\"\");\n    expect(url.protocol).toBe(\"\");\n    expect(url.username).toBe(\"\");\n    expect(url.password).toBe(\"\");\n    expect(url.host).toBe(\"\");\n    expect(url.hostname).toBe(\"\");\n    expect(url.port).toBe(\"\");\n    expect(url.pathname).toBe(\"public/index.css\");\n    expect(url.search).toBe(\"?query=yes\");\n    expect(url.searchParams.get(\"query\")).toBe(\"yes\");\n    expect(url.hash).toBe(\"#fragment\");\n    expect(url + \"\").toBe(\"public/index.css?query=yes#fragment\");\n    expect(url.toString()).toBe(\"public/index.css?query=yes#fragment\");\n    expect(JSON.stringify(url)).toBe(\"\\\"public/index.css?query=yes#fragment\\\"\");\n    expect(url instanceof URL).toBe(true);\n  });\n});"
  },
  "runtimeModules": {
    "webpack/runtime/bootstrap": "var __webpack_module_cache__ = {};\nfunction __webpack_require__(moduleId) {\n  var cachedModule = __webpack_module_cache__[moduleId];\n  if (cachedModule !== undefined) return cachedModule.exports;\n  var module = __webpack_module_cache__[moduleId] = {\n    \"exports\": {}\n  };\n  __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n  return module.exports;\n}",
    "webpack/runtime/relative url": "!function () {\n  __webpack_require__.U = function RelativeURL(url) {\n    var realUrl = new URL(url, \"x:/\");\n    var values = {};\n    for (var key in realUrl) values[key] = realUrl[key];\n    values.href = url;\n    values.pathname = url.replace(/[?#].*/, \"\");\n    values.origin = values.protocol = \"\";\n    values.toString = values.toJSON = function () {\n      return url;\n    };\n    for (var key in values) Object.defineProperty(this, key, {\n      \"configurable\": true,\n      \"enumerable\": true,\n      \"value\": values[key]\n    });\n  };\n  __webpack_require__.U.prototype = URL.prototype;\n}();",
    "webpack/runtime/publicPath": "!function () {\n  __webpack_require__.p = \"public/\";\n}();"
  }
}