{
  "modules": {
    "__WORKSPACE__/packages/rspack-test-tools/tests/runtimeDiffCases/runtime-module/create-script-url\u0000#with-trusted-types/src/index.js": "(function () {\n  const worker = new Worker(__webpack_require__.tu(new URL(__webpack_require__.p + __webpack_require__.u(\"worker1\"), __webpack_require__.b)), {\n    \"name\": \"worker1\",\n    \"type\": undefined\n  });\n  worker.postMessage(\"ok\");\n});"
  },
  "runtimeModules": {
    "webpack/runtime/bootstrap": "var __webpack_require__ = {};\n__webpack_require__.m = __webpack_modules__;",
    "webpack/runtime/get javascript chunk filename": "!function () {\n  __webpack_require__.u = function (chunkId) {\n    return \"\" + chunkId + \".chunk.js\";\n  };\n}();",
    "webpack/runtime/global": "!function () {\n  __webpack_require__.g = function () {\n    if (typeof globalThis === \"object\") return globalThis;\n    try {\n      return this || new Function(\"return this\")();\n    } catch (e) {\n      if (typeof window === \"object\") return window;\n    }\n  }();\n}();",
    "webpack/runtime/hasOwnProperty shorthand": "!function () {\n  __webpack_require__.o = function (obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n  };\n}();",
    "webpack/runtime/trusted types policy": "!function () {\n  var policy;\n  __webpack_require__.tt = function () {\n    if (policy === undefined) {\n      policy = {\n        \"createScriptURL\": function (url) {\n          return url;\n        }\n      };\n      if (typeof trustedTypes !== \"undefined\" && trustedTypes.createPolicy) policy = trustedTypes.createPolicy(\"customPolicyName\", policy);\n    }\n    return policy;\n  };\n}();",
    "webpack/runtime/trusted types script url": "!function () {\n  __webpack_require__.tu = function (url) {\n    return __webpack_require__.tt().createScriptURL(url);\n  };\n}();",
    "webpack/runtime/publicPath": "!function () {\n  var scriptUrl;\n  if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\n  var document = __webpack_require__.g.document;\n  if (!scriptUrl && document) {\n    if (document.currentScript && document.currentScript.tagName.toUpperCase() === \"SCRIPT\") scriptUrl = document.currentScript.src;\n    if (!scriptUrl) {\n      var scripts = document.getElementsByTagName(\"script\");\n      if (scripts.length) {\n        var i = scripts.length - 1;\n        while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n      }\n    }\n  }\n  if (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\n  scriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n  __webpack_require__.p = scriptUrl;\n}();",
    "webpack/runtime/importScripts chunk loading": "!function () {\n  __webpack_require__.b = self.location + \"\";\n  var installedChunks = {\n    \"other\": 1\n  };\n}();"
  }
}