// Mock lodash-es implementation for testing
export function map(array, iteratee) {
  return array.map(iteratee);
}

export function filter(array, predicate) {
  return array.filter(predicate);
}

export function uniq(array) {
  return [...new Set(array)];
}

export function debounce(func, wait) {
  let timeout;
  return function(...args) {
    clearTimeout(timeout);
    timeout = setTimeout(() => func.apply(this, args), wait);
  };
}

export function isEmpty(value) {
  return value == null || 
    (Array.isArray(value) && value.length === 0) ||
    (typeof value === 'object' && Object.keys(value).length === 0);
}

export function isArray(value) {
  return Array.isArray(value);
}

export function isObject(value) {
  return typeof value === 'object' && value !== null && !Array.isArray(value);
}

// Default export
export default {
  map, filter, uniq, debounce, isEmpty, isArray, isObject
};