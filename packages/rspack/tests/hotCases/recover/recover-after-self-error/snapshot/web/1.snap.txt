# Case recover-after-self-error: Step 1

## Changed Files
- a.js

## Asset Files
- Bundle: bundle.js
- Manifest: main.LAST_HASH.hot-update.json, size: 28
- Update: main.LAST_HASH.hot-update.js, size: 766

## Manifest

### main.LAST_HASH.hot-update.json

```json
{"c":["main"],"r":[],"m":[]}
```

		
## Update


### main.LAST_HASH.hot-update.js

#### Changed Modules
- ./a.js

#### Changed Runtime Modules
- webpack/runtime/get_full_hash

#### Changed Content
```js
self["webpackHotUpdate"]('main', {
"./a.js": (function (module, __webpack_exports__, __webpack_require__) {
"use strict";
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
  getError: function() { return getError; },
  id: function() { return id; }
});
module.hot.data.store.error = false;
module.hot.data.store.value = 2;
/* harmony default export */ __webpack_exports__["default"] = ((()=>{
    throw new Error("should not happen");
}));
const getError = ()=>{
    throw new Error("should not happen");
};
const id = module.id;
throw new Error("Failed");
}),

},function(__webpack_require__) {
// webpack/runtime/get_full_hash
!function() {
__webpack_require__.h = function () {
	return "CURRENT_HASH";
};

}();

}
);
```