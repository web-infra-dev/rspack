ERROR in ./a.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expression expected
         ╭─[4:1]
       4 │     d = 10
       5 │     g = CONST
       6 │ }
         · ▲
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./a.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expected a semicolon
         ╭─[1:1]
       1 │ const CONST = 9000 % 2;
       2 │ const  D {
         ·          ─
       3 │     // Comma is required, but parser can recover because of the newline.
       4 │     d = 10
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./b.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expression expected
         ╭─[4:1]
       4 │     d = 10
       5 │     g = CONST
       6 │ }
         · ▲
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./b.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expected a semicolon
         ╭─[1:1]
       1 │ const CONST = 9000 % 2;
       2 │ const  D {
         ·          ─
       3 │     // Comma is required, but parser can recover because of the newline.
       4 │     d = 10
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./c.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expression expected
         ╭─[4:1]
       4 │     d = 10
       5 │     g = CONST
       6 │ }
         · ▲
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./c.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expected a semicolon
         ╭─[1:1]
       1 │ const CONST = 9000 % 2;
       2 │ const  D {
         ·          ─
       3 │     // Comma is required, but parser can recover because of the newline.
       4 │     d = 10
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./d.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expression expected
         ╭─[4:1]
       4 │     d = 10
       5 │     g = CONST
       6 │ }
         · ▲
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./d.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expected a semicolon
         ╭─[1:1]
       1 │ const CONST = 9000 % 2;
       2 │ const  D {
         ·          ─
       3 │     // Comma is required, but parser can recover because of the newline.
       4 │     d = 10
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./e.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expression expected
         ╭─[4:1]
       4 │     d = 10
       5 │     g = CONST
       6 │ }
         · ▲
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./e.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expected a semicolon
         ╭─[1:1]
       1 │ const CONST = 9000 % 2;
       2 │ const  D {
         ·          ─
       3 │     // Comma is required, but parser can recover because of the newline.
       4 │     d = 10
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./f.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expression expected
         ╭─[4:1]
       4 │     d = 10
       5 │     g = CONST
       6 │ }
         · ▲
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./f.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expected a semicolon
         ╭─[1:1]
       1 │ const CONST = 9000 % 2;
       2 │ const  D {
         ·          ─
       3 │     // Comma is required, but parser can recover because of the newline.
       4 │     d = 10
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./g.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expression expected
         ╭─[4:1]
       4 │     d = 10
       5 │     g = CONST
       6 │ }
         · ▲
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.

ERROR in ./g.js ModuleParseError

  × Module parse failed:
  ╰─▶   × JavaScript parsing error: Expected a semicolon
         ╭─[1:1]
       1 │ const CONST = 9000 % 2;
       2 │ const  D {
         ·          ─
       3 │     // Comma is required, but parser can recover because of the newline.
       4 │     d = 10
         ╰────
      
  help: 
        You may need an appropriate loader to handle this file type.
